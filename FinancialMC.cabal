-- Initial FinancialMC.cabal generated by cabal init.  For further 
-- documentation, see http://haskell.org/cabal/users-guide/

name:                FinancialMC
version:             0.3.0.0
synopsis:            Personal finance Monte Carlo: framework, engine and parser
-- description:         
license:             GPL-3
license-file:        gpl-3.0.txt
author:              Adam Conner-Sax
maintainer:          adam_conner_sax@yahoo.com
copyright:           2015, Adam Conner-Sax
category:            Finance
build-type:          Simple
-- extra-source-files:  
cabal-version:       >=1.10

library
  hs-source-dirs: src
  default-language: Haskell2010
  other-extensions: TemplateHaskell, MultiParamTypeClasses, FunctionalDependencies, FlexibleInstances
  exposed-modules:
    FinancialMC.Base
    FinancialMC.Internal              
    FinancialMC.Core.MoneyValue
    FinancialMC.Core.MoneyValueOps
    FinancialMC.Core.CValued              
    FinancialMC.Core.Asset
    FinancialMC.Core.Flow
    FinancialMC.Core.Rule
    FinancialMC.Core.LifeEvent
    FinancialMC.Core.Rates
    FinancialMC.Core.Tax
    FinancialMC.Core.AssetTrading
    FinancialMC.Core.Evolve
    FinancialMC.Core.Result    
    FinancialMC.Core.Utilities
    FinancialMC.Core.Analysis
    FinancialMC.Builders.All
    FinancialMC.Parsers.Configuration
    FinancialMC.Parsers.ConfigurationLoader              
    FinancialMC.Parsers.XML.Utilities
    FinancialMC.Parsers.XML.All            
    FinancialMC.Parsers.JSON.Utilities
    FinancialMC.PersistentTypes
  other-modules:
    FinancialMC.Core.CValued_Internal
    FinancialMC.Core.FinancialStates
    FinancialMC.Core.TradingTypes
    FinancialMC.Core.FinApp
    FinancialMC.Core.Engine
    FinancialMC.Core.MCState
    FinancialMC.Core.MapLike
    FinancialMC.Builders.Assets
    FinancialMC.Builders.Flows
    FinancialMC.Builders.Rules
    FinancialMC.Builders.LifeEvents
    FinancialMC.Builders.RateModels
    FinancialMC.Parsers.XML.Asset
    FinancialMC.Parsers.XML.Account
    FinancialMC.Parsers.XML.Flow
    FinancialMC.Parsers.XML.Rule
    FinancialMC.Parsers.XML.LifeEvent
    FinancialMC.Parsers.XML.ParseInput
    FinancialMC.Parsers.XML.ParseTax
    FinancialMC.Parsers.XML.ParseRateModel
    FinancialMC.Parsers.XML.ParseFinancialState
  build-depends:  Cabal
                , aeson
                , base
                , bytestring
                , containers
                , deepseq
                , errors
                , ether
                , exceptions
                , hashable
                , hxt
                , hxt-relaxng
                , lens
                , mersenne-random-pure64
                , mmorph
                , monad-parallel
                , mtl
                , parallel
                , persistent
                , persistent-template
                , pipes
                , random-fu
                , random-source
                , safe
                , split
                , statistics
                , text
                , time
                , transformers
                , unordered-containers
                , vector
                , yaml
  ghc-options: -O2 -fno-warn-orphans -fno-warn-unused-binds -fno-warn-unused-matches -funbox-small-strict-fields
  ghc-prof-options: -fprof-auto -auto-all -fprof-cafs 

executable FinancialMC-cl
  hs-source-dirs:      src/FinancialMC-commandLine
  main-is:             Main.hs
  other-modules:       OptionParser
  ghc-options:	       -Wall -O2 -rtsopts -threaded -funbox-strict-fields -fno-warn-unused-binds -fno-warn-unused-matches 
  ghc-prof-options:    -fprof-auto -auto-all -fprof-cafs 
  build-depends:       FinancialMC, base, lens, errors, optparse-applicative, monad-parallel, transformers, random-source, time, containers, split, raw-strings-qq, vector, exceptions,mtl	       
  default-language:    Haskell2010

executable FinancialMC-threadscope
  hs-source-dirs: src/FinancialMC-commandLine
  main-is:        Main.hs
  other-modules:       OptionParser
  ghc-options:    -O2 -threaded -funbox-strict-fields -fno-warn-unused-binds -fno-warn-unused-matches
  ghc-prof-options: 
  build-depends:       FinancialMC, base, lens, errors, optparse-applicative, monad-parallel, transformers, random-source, time, containers, split, raw-strings-qq,vector,exceptions,mtl		       
  default-language:    Haskell2010

executable XmlToJSON
  ghc-options:         -O2 -threaded "-with-rtsopts=-N"
  hs-source-dirs:      src/FinancialMC/Parsers/XmlToJSON
  main-is:             Main.hs
  build-depends:       FinancialMC, base, optparse-applicative, containers, hxt, hxt-relaxng, mtl, yaml, aeson, aeson-pretty, exceptions, bytestring
  default-language:    Haskell2010

Test-suite UnitTests
  type:                exitcode-stdio-1.0
  ghc-options:	       -O2 -threaded "-with-rtsopts=-N" 
  hs-source-dirs:      src/Testing/
  main-is:             Main.hs
  other-modules:       UnitTests
  other-extensions:    QuasiQuotes, TemplateHaskell, MultiParamTypeClasses, FunctionalDependencies, FlexibleInstances
  build-depends:       FinancialMC, base, errors, lens,transformers,time,Cabal, exceptions, mtl
  default-language:    Haskell2010

benchmark bench-all
  type:                exitcode-stdio-1.0
  hs-source-dirs:      src/bench
  other-modules:       BenchUtils
                     , BenchMoneyOps
                     , BenchPath
                     , BenchMapLike
--                     , BenchEngine
  ghc-options:         -O2 -threaded "-with-rtsopts=-N" -funbox-strict-fields -fno-warn-unused-binds -fno-warn-unused-matches
  main-is:             BenchAll.hs
  build-depends:       FinancialMC, base, criterion, deepseq, lens, mersenne-random-pure64, unordered-containers, containers, text 
  default-language:    Haskell2010